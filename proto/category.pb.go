// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.9.0
// source: proto/category.proto

package category

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Create_Category_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryName        string `protobuf:"bytes,1,opt,name=category_name,json=categoryName,proto3" json:"category_name"`                      //分类名称
	CategoryDescription string `protobuf:"bytes,2,opt,name=category_description,json=categoryDescription,proto3" json:"category_description"` //描述信息
}

func (x *Create_Category_Request) Reset() {
	*x = Create_Category_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_category_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Create_Category_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Create_Category_Request) ProtoMessage() {}

func (x *Create_Category_Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_category_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Create_Category_Request.ProtoReflect.Descriptor instead.
func (*Create_Category_Request) Descriptor() ([]byte, []int) {
	return file_proto_category_proto_rawDescGZIP(), []int{0}
}

func (x *Create_Category_Request) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *Create_Category_Request) GetCategoryDescription() string {
	if x != nil {
		return x.CategoryDescription
	}
	return ""
}

type Create_Category_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message    string `protobuf:"bytes,1,opt,name=message,proto3" json:"message"`
	CategoryId int64  `protobuf:"varint,2,opt,name=category_id,json=categoryId,proto3" json:"category_id"` //返回id值
}

func (x *Create_Category_Response) Reset() {
	*x = Create_Category_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_category_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Create_Category_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Create_Category_Response) ProtoMessage() {}

func (x *Create_Category_Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_category_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Create_Category_Response.ProtoReflect.Descriptor instead.
func (*Create_Category_Response) Descriptor() ([]byte, []int) {
	return file_proto_category_proto_rawDescGZIP(), []int{1}
}

func (x *Create_Category_Response) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Create_Category_Response) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

type Update_Category_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message"`
}

func (x *Update_Category_Response) Reset() {
	*x = Update_Category_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_category_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Update_Category_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Update_Category_Response) ProtoMessage() {}

func (x *Update_Category_Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_category_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Update_Category_Response.ProtoReflect.Descriptor instead.
func (*Update_Category_Response) Descriptor() ([]byte, []int) {
	return file_proto_category_proto_rawDescGZIP(), []int{2}
}

func (x *Update_Category_Response) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Delete_Category_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryId int64 `protobuf:"varint,1,opt,name=category_id,json=categoryId,proto3" json:"category_id"`
}

func (x *Delete_Category_Request) Reset() {
	*x = Delete_Category_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_category_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Delete_Category_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Delete_Category_Request) ProtoMessage() {}

func (x *Delete_Category_Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_category_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Delete_Category_Request.ProtoReflect.Descriptor instead.
func (*Delete_Category_Request) Descriptor() ([]byte, []int) {
	return file_proto_category_proto_rawDescGZIP(), []int{3}
}

func (x *Delete_Category_Request) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

type Delete_Category_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message"`
}

func (x *Delete_Category_Response) Reset() {
	*x = Delete_Category_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_category_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Delete_Category_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Delete_Category_Response) ProtoMessage() {}

func (x *Delete_Category_Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_category_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Delete_Category_Response.ProtoReflect.Descriptor instead.
func (*Delete_Category_Response) Descriptor() ([]byte, []int) {
	return file_proto_category_proto_rawDescGZIP(), []int{4}
}

func (x *Delete_Category_Response) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Find_CategoryByName_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
}

func (x *Find_CategoryByName_Request) Reset() {
	*x = Find_CategoryByName_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_category_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Find_CategoryByName_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Find_CategoryByName_Request) ProtoMessage() {}

func (x *Find_CategoryByName_Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_category_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Find_CategoryByName_Request.ProtoReflect.Descriptor instead.
func (*Find_CategoryByName_Request) Descriptor() ([]byte, []int) {
	return file_proto_category_proto_rawDescGZIP(), []int{5}
}

func (x *Find_CategoryByName_Request) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Category_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryId          int64  `protobuf:"varint,1,opt,name=category_id,json=categoryId,proto3" json:"category_id"`
	CategoryName        string `protobuf:"bytes,2,opt,name=category_name,json=categoryName,proto3" json:"category_name"`
	CategoryDescription string `protobuf:"bytes,3,opt,name=category_description,json=categoryDescription,proto3" json:"category_description"`
}

func (x *Category_Response) Reset() {
	*x = Category_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_category_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Category_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Category_Response) ProtoMessage() {}

func (x *Category_Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_category_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Category_Response.ProtoReflect.Descriptor instead.
func (*Category_Response) Descriptor() ([]byte, []int) {
	return file_proto_category_proto_rawDescGZIP(), []int{6}
}

func (x *Category_Response) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *Category_Response) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *Category_Response) GetCategoryDescription() string {
	if x != nil {
		return x.CategoryDescription
	}
	return ""
}

type FindCateGoryById_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
}

func (x *FindCateGoryById_Request) Reset() {
	*x = FindCateGoryById_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_category_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindCateGoryById_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindCateGoryById_Request) ProtoMessage() {}

func (x *FindCateGoryById_Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_category_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindCateGoryById_Request.ProtoReflect.Descriptor instead.
func (*FindCateGoryById_Request) Descriptor() ([]byte, []int) {
	return file_proto_category_proto_rawDescGZIP(), []int{7}
}

func (x *FindCateGoryById_Request) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Find_All_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Find_All_Request) Reset() {
	*x = Find_All_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_category_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Find_All_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Find_All_Request) ProtoMessage() {}

func (x *Find_All_Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_category_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Find_All_Request.ProtoReflect.Descriptor instead.
func (*Find_All_Request) Descriptor() ([]byte, []int) {
	return file_proto_category_proto_rawDescGZIP(), []int{8}
}

type Find_All_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category []*Category_Response `protobuf:"bytes,1,rep,name=category,proto3" json:"category"`
}

func (x *Find_All_Response) Reset() {
	*x = Find_All_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_category_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Find_All_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Find_All_Response) ProtoMessage() {}

func (x *Find_All_Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_category_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Find_All_Response.ProtoReflect.Descriptor instead.
func (*Find_All_Response) Descriptor() ([]byte, []int) {
	return file_proto_category_proto_rawDescGZIP(), []int{9}
}

func (x *Find_All_Response) GetCategory() []*Category_Response {
	if x != nil {
		return x.Category
	}
	return nil
}

var File_proto_category_proto protoreflect.FileDescriptor

var file_proto_category_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x22, 0x71, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x31, 0x0a, 0x14, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x55, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x18, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x3a, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x18,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x31, 0x0a, 0x1b, 0x46, 0x69, 0x6e, 0x64, 0x5f, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x11, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x31, 0x0a, 0x14, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2a, 0x0a, 0x18, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x61, 0x74, 0x65,
	0x47, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x12, 0x0a, 0x10, 0x46, 0x69, 0x6e, 0x64, 0x5f, 0x41, 0x6c, 0x6c, 0x5f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x4c, 0x0a, 0x11, 0x46, 0x69, 0x6e, 0x64, 0x5f, 0x41, 0x6c, 0x6c,
	0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x32, 0x9c, 0x04, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12,
	0x59, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x21, 0x2e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x21, 0x2e, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x21, 0x2e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x5a, 0x0a, 0x12, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x2e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x5f, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x5f, 0x41, 0x6c,
	0x6c, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x10,
	0x46, 0x69, 0x6e, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x49, 0x64,
	0x12, 0x22, 0x2e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x43, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x5f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1a, 0x2e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x5f, 0x41, 0x6c, 0x6c, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x5f, 0x41, 0x6c, 0x6c, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x10, 0x5a, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_category_proto_rawDescOnce sync.Once
	file_proto_category_proto_rawDescData = file_proto_category_proto_rawDesc
)

func file_proto_category_proto_rawDescGZIP() []byte {
	file_proto_category_proto_rawDescOnce.Do(func() {
		file_proto_category_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_category_proto_rawDescData)
	})
	return file_proto_category_proto_rawDescData
}

var file_proto_category_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_proto_category_proto_goTypes = []interface{}{
	(*Create_Category_Request)(nil),     // 0: category.Create_Category_Request
	(*Create_Category_Response)(nil),    // 1: category.Create_Category_Response
	(*Update_Category_Response)(nil),    // 2: category.Update_Category_Response
	(*Delete_Category_Request)(nil),     // 3: category.Delete_Category_Request
	(*Delete_Category_Response)(nil),    // 4: category.Delete_Category_Response
	(*Find_CategoryByName_Request)(nil), // 5: category.Find_CategoryByName_Request
	(*Category_Response)(nil),           // 6: category.Category_Response
	(*FindCateGoryById_Request)(nil),    // 7: category.FindCateGoryById_Request
	(*Find_All_Request)(nil),            // 8: category.Find_All_Request
	(*Find_All_Response)(nil),           // 9: category.Find_All_Response
}
var file_proto_category_proto_depIdxs = []int32{
	6, // 0: category.Find_All_Response.category:type_name -> category.Category_Response
	0, // 1: category.Category.CreateCategory:input_type -> category.Create_Category_Request
	0, // 2: category.Category.UpdateCategory:input_type -> category.Create_Category_Request
	3, // 3: category.Category.DeleteCategory:input_type -> category.Delete_Category_Request
	5, // 4: category.Category.FindCategoryByName:input_type -> category.Find_CategoryByName_Request
	7, // 5: category.Category.FindCategoryById:input_type -> category.FindCateGoryById_Request
	8, // 6: category.Category.FindAllCategory:input_type -> category.Find_All_Request
	1, // 7: category.Category.CreateCategory:output_type -> category.Create_Category_Response
	2, // 8: category.Category.UpdateCategory:output_type -> category.Update_Category_Response
	4, // 9: category.Category.DeleteCategory:output_type -> category.Delete_Category_Response
	9, // 10: category.Category.FindCategoryByName:output_type -> category.Find_All_Response
	6, // 11: category.Category.FindCategoryById:output_type -> category.Category_Response
	9, // 12: category.Category.FindAllCategory:output_type -> category.Find_All_Response
	7, // [7:13] is the sub-list for method output_type
	1, // [1:7] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_category_proto_init() }
func file_proto_category_proto_init() {
	if File_proto_category_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_category_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Create_Category_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_category_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Create_Category_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_category_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Update_Category_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_category_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Delete_Category_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_category_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Delete_Category_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_category_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Find_CategoryByName_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_category_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Category_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_category_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindCateGoryById_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_category_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Find_All_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_category_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Find_All_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_category_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_category_proto_goTypes,
		DependencyIndexes: file_proto_category_proto_depIdxs,
		MessageInfos:      file_proto_category_proto_msgTypes,
	}.Build()
	File_proto_category_proto = out.File
	file_proto_category_proto_rawDesc = nil
	file_proto_category_proto_goTypes = nil
	file_proto_category_proto_depIdxs = nil
}
